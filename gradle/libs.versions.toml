[versions]
agp = "8.7.3"
android-compileSdk = "35"
android-minSdk = "24"
android-targetSdk = "35"
androidx-activity = "1.10.1"
androidx-appcompat = "1.7.1"
androidx-constraintlayout = "2.2.1"
androidx-core = "1.16.0"
androidx-espresso = "3.6.1"
androidx-lifecycle = "2.9.1"
androidx-testExt = "1.2.1"
assertK = "0.28.1"
authKt = "3.2.0"
cache4k = "0.13.0"
coil3 = "3.0.4"
coil3-io = "3.0.0-alpha01"
coilNetwork = "3.0.0-alpha08"
composeMultiplatform = "1.8.2"
constraintlayoutVersion = "2.2.0"
coreKtxVersion = "1.6.1"
dataStoreVersion = "1.1.2"
foundationAndroidVersion = "1.7.7"
image-loader = "1.2.8"
junit = "4.13.2"
koin-compose-version = "1.0.4"
koin-version = "4.0.0"
koinComposeMultiplatform = "4.0.0"
koinKspVersion = "1.2.2"
kotest = "5.8.0"
kotlin = "2.2.0"
kotlin-datetime-version = "0.6.1"
kotlinSerialization = "1.7.3"
kotlinx-serialization-version = "1.9.0"
kotlinxCoroutines = "1.10.1"
ksp = "2.2.0-2.0.2"
ktor = "3.2.1"
logback = "1.5.16"
material3AndroidVersion = "1.3.2"
mockative = "2.2.2"
mockk = "1.8.13.kotlin13"
moko-geo-version = "0.6.0"
navigationCompose = "2.8.0-alpha13"
paging-compose-version = "3.3.0-alpha02-0.5.1"
room = "2.7.0-alpha13"
sqlite = "2.5.0-alpha13"
sqldelight = "2.0.2"
sqliter = "1.3.0"
startupRuntime = "1.2.0"
superbase-bom = "3.1.4"
supabaseKt = "3.2.0"
turbine = "1.0.0"
uiAndroid = "1.7.7"






[libraries]
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-testJunit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
junit = { module = "junit:junit", version.ref = "junit" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-testExt-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-testExt" }
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidx-appcompat" }
androidx-constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidx-constraintlayout" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-lifecycle-viewmodel = { module = "org.jetbrains.androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "org.jetbrains.androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }


cache4k = { module = "io.github.reactivecircus.cache4k:cache4k", version.ref = "cache4k" }
coil3 = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil3-io" }
coil3-network = { module = "io.coil-kt.coil3:coil-network", version.ref = "coil3-io" }
coil3-video = { module = "io.coil-kt.coil3:coil-video", version.ref = "coil3-io" }
coil3-svg = { module = "io.coil-kt.coil3:coil-svg", version.ref = "coil3-io" }
coil3-gif = { module = "io.coil-kt.coil3:coil-gif", version.ref = "coil3-io" }
coil3-core = { module = "io.coil-kt.coil3:coil-core", version.ref = "coil3-io" }

compose-image-loader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "image-loader" }
compose-navigation = { group = "org.jetbrains.androidx.navigation", name = "navigation-compose", version.ref= "navigationCompose"}
datastore = { module = "androidx.datastore:datastore", version.ref = "dataStoreVersion" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStoreVersion" }


kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
kotlinx-coroutines-core-iosarm64 = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core-iossimulatorarm64", version.ref = "kotlinxCoroutines" }
kotlinx-serialization-json = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-json", version.ref = "kotlinSerialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlin-datetime-version" }
kotlinx-coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "kotlinxCoroutines" }


koin-core = { group = "io.insert-koin", name = "koin-core", version.ref = "koin-version" }
koin-android = { group = "io.insert-koin", name = "koin-android", version.ref = "koin-version" }
koin-androidx-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koin-version" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koinComposeMultiplatform" }
koin-compose-viewmodel = { module = "io.insert-koin:koin-compose-viewmodel", version.ref = "koinComposeMultiplatform" }
koin-compose-viewmodel-navigation = { module = "io.insert-koin:koin-compose-viewmodel-navigation", version.ref = "koinComposeMultiplatform" }
koin-annotations = { module = "io.insert-koin:koin-annotations", version.ref = "koinKspVersion" }
koin-ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
koin-compiler = { module = "io.insert-koin:koin-ksp-compiler", version.ref = "koinKspVersion" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin-version" }


ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-ios = { module = "io.ktor:ktor-client-ios", version.ref = "ktor" }
ktor-client-java = { group = "io.ktor", name = "ktor-client-java", version.ref = "ktor" }
#ktor-serialization-kotlinx-json = { group = "io.ktor", name = "ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-serialization = { group = "io.ktor", name = "ktor-client-serialization", version.ref = "ktor" }
ktor-client-content-negotiation = { group = "io.ktor", name = "ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-json = { group = "io.ktor", name = "ktor-client-json", version.ref = "ktor" }
ktor-client-logging = { group = "io.ktor", name = "ktor-client-logging", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-gson = { module = "io.ktor:ktor-serialization-gson", version.ref = "ktor" }


ktor-server-test-host = { module = "io.ktor:ktor-server-test-host", version.ref = "ktor" }
ktor-server-core = { module = "io.ktor:ktor-server-core-jvm", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty-jvm", version.ref = "ktor" }
ktor-server-tests = { module = "io.ktor:ktor-server-tests-jvm", version.ref = "ktor" }

logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }


moko-geo = { module = "dev.icerock.moko:geo", version.ref = "moko-geo-version"}
moko-geo-compose = { module = "dev.icerock.moko:geo-compose", version.ref = "moko-geo-version"}


sqliter = { module = "co.touchlab:sqliter", version.ref = "sqliter" }
android-driver = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-native-driver = { module = "app.cash.sqldelight:native-driver", version.ref = "sqldelight" }
coroutines-extensions = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
androidx-startup-runtime = { module = "androidx.startup:startup-runtime", version.ref = "startupRuntime" }


#Tests Lib Dependencies
mockative = { module = "io.mockative:mockative", version.ref = "mockative" }
assertK = { module = "com.willowtreeapps.assertk:assertk", version.ref = "assertK" }
ktor-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinxCoroutines" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-property = { module = "io.kotest:kotest-property", version.ref = "kotest" }
turbine-turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
mockk-io = { module = "io.mockk:mockk", version.ref = "mockk" }

androidx-room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
androidx-room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }
androidx-room-paging = { group = "androidx.room", name = "room-paging", version.ref = "room" }
room-runtime-android = { module = "androidx.room:room-runtime-android", version.ref = "room" }
sqlite-bundled = { module = "androidx.sqlite:sqlite-bundled", version.ref = "sqlite" }

storage-kt = { module = "io.github.jan-tennert.supabase:storage-kt", version.ref = "authKt" }
superbase-bom = { module = "io.github.jan-tennert.supabase:bom", version.ref = "superbase-bom" }
supabase-postgrest-kt = { module = "io.github.jan-tennert.supabase:postgrest-kt" }
supabase-realtime-kt = { module = "io.github.jan-tennert.supabase:realtime-kt" }
superbase-auth-kt = { module = "io.github.jan-tennert.supabase:auth-kt" }
supabase-functions-kt = { module = "io.github.jan-tennert.supabase:functions-kt"}
supabase-kt = { module = "io.github.jan-tennert.supabase:supabase-kt", version.ref = "supabaseKt" }
compose-auth = { module = "io.github.jan-tennert.supabase:compose-auth", version.ref = "authKt" }

paging-compose= { module = "app.cash.paging:paging-compose-common", version.ref = "paging-compose-version" }
paging-common= { module = "app.cash.paging:paging-common", version.ref = "paging-compose-version" }
androidx-foundation-android = { group = "androidx.compose.foundation", name = "foundation-android", version.ref = "foundationAndroidVersion" }
androidx-material3-android = { group = "androidx.compose.material3", name = "material3-android", version.ref = "material3AndroidVersion" }
test-core-ktx = { group = "androidx.test", name = "core-ktx", version.ref = "coreKtxVersion" }

[bundles]
coil = [
    "coil3",
    "coil3-core",
    "coil3-network",
    "coil3-svg",
    "coil3-gif"
]
ktor-common = [
    "ktor-client-core",
    "ktor-client-cio",
    "ktor-client-json",
    "ktor-client-logging",
    "ktor-client-serialization",
    "ktor-client-content-negotiation",
]
koin = [
    "koin-compose",
    "koin-compose-viewmodel",
    "koin-compose-viewmodel-navigation"
]

supabase = [
    "supabase-kt",
    "supabase-postgrest-kt",
    "supabase-realtime-kt",
    "superbase-auth-kt",
    "storage-kt",
    "compose-auth",
    "supabase-functions-kt"
]



[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kotlin-parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
kotlinJvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor" }
room = { id = "androidx.room", version.ref = "room" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }


module-composeMultiplatform = { id = "com.asoftltd.asoftltd.composeMultiplatform", version = "unspecified" }
module-kotlinMultiplatform = { id = "com.asoftltd.asoftltd.kotlinMultiplatform", version = "unspecified" }
module-androidApp = { id = "com.asoftltd.asoftltd.androidApp", version = "unspecified" }
